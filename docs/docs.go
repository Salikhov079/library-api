// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/author/create": {
            "post": {
                "description": "Create page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Author"
                ],
                "summary": "Create Author",
                "parameters": [
                    {
                        "description": "Create",
                        "name": "Create",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.AuthorReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/author/delete/{id}": {
            "delete": {
                "description": "Delete page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Author"
                ],
                "summary": "Delete Author",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while Deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/author/get/{id}": {
            "get": {
                "description": "GetById page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Author"
                ],
                "summary": "GetById Author",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetById Successful",
                        "schema": {
                            "$ref": "#/definitions/genprotos.AuthorRes"
                        }
                    },
                    "401": {
                        "description": "Error while GetById",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/author/getall": {
            "get": {
                "description": "GetAll page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Author"
                ],
                "summary": "GetAll Author",
                "parameters": [
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetAll Successful",
                        "schema": {
                            "$ref": "#/definitions/genprotos.AllAuthors"
                        }
                    },
                    "401": {
                        "description": "Error while GetAll",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/author/update/{id}": {
            "put": {
                "description": "Update page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Author"
                ],
                "summary": "Update Author",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update",
                        "name": "Update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.AuthorRes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while updated",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/author/{id}/books": {
            "get": {
                "description": "GetAll page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Author"
                ],
                "summary": "GetAll Author",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetAll Successful",
                        "schema": {
                            "$ref": "#/definitions/genprotos.AllBooks"
                        }
                    },
                    "401": {
                        "description": "Error while GetAll",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book/create": {
            "post": {
                "description": "Create page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "Create Book",
                "parameters": [
                    {
                        "description": "Create",
                        "name": "Create",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.BookReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book/delete/{id}": {
            "delete": {
                "description": "Delete page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "Delete Book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while Deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book/get/{id}": {
            "get": {
                "description": "GetById page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "GetById Book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetById Successful",
                        "schema": {
                            "$ref": "#/definitions/genprotos.BookRes"
                        }
                    },
                    "401": {
                        "description": "Error while GetById",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book/getall": {
            "get": {
                "description": "GetAll page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "GetAll Book",
                "parameters": [
                    {
                        "type": "string",
                        "name": "authorName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetAll Successful",
                        "schema": {
                            "$ref": "#/definitions/genprotos.AllBooks"
                        }
                    },
                    "401": {
                        "description": "Error while GetAll",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book/overdue": {
            "get": {
                "description": "Overdue page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "Overdue Book",
                "responses": {
                    "200": {
                        "description": "Overdue Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while Overdue",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book/update/{id}": {
            "put": {
                "description": "Update page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book"
                ],
                "summary": "Update Book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update",
                        "name": "Update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.BookRes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while updated",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/borrower/create": {
            "post": {
                "description": "Create page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Borrower"
                ],
                "summary": "Create Borrower",
                "parameters": [
                    {
                        "description": "Create",
                        "name": "Create",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.BorrowerReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/borrower/delete/{id}": {
            "delete": {
                "description": "Delete page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Borrower"
                ],
                "summary": "Delete Borrower",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Borrower ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while Deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/borrower/get/{id}": {
            "get": {
                "description": "GetById page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Borrower"
                ],
                "summary": "GetById Borrower",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Borrower ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetById Successful",
                        "schema": {
                            "$ref": "#/definitions/genprotos.BorrowerRes"
                        }
                    },
                    "401": {
                        "description": "Error while GetById",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/borrower/getall": {
            "get": {
                "description": "GetAll page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Borrower"
                ],
                "summary": "GetAll Borrower",
                "parameters": [
                    {
                        "type": "string",
                        "name": "borrow_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "return_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetAll Successful",
                        "schema": {
                            "$ref": "#/definitions/genprotos.AllBorrowers"
                        }
                    },
                    "401": {
                        "description": "Error while GetAll",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/borrower/update/{id}": {
            "put": {
                "description": "Update page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Borrower"
                ],
                "summary": "Update Borrower",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Borrower ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update",
                        "name": "Update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.BorrowerRes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while updated",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/genre/create": {
            "post": {
                "description": "Create page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Genre"
                ],
                "summary": "Create Genre",
                "parameters": [
                    {
                        "description": "Create",
                        "name": "Create",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.Genre"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/genre/delete/{id}": {
            "delete": {
                "description": "Delete page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Genre"
                ],
                "summary": "Delete Genre",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Genre ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while Deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/genre/get/{id}": {
            "get": {
                "description": "GetById page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Genre"
                ],
                "summary": "GetById Genre",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Genre ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetById Successful",
                        "schema": {
                            "$ref": "#/definitions/genprotos.Genre"
                        }
                    },
                    "401": {
                        "description": "Error while GetById",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/genre/getall": {
            "get": {
                "description": "GetAll page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Genre"
                ],
                "summary": "GetAll Genre",
                "parameters": [
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetAll Successful",
                        "schema": {
                            "$ref": "#/definitions/genprotos.AllGenres"
                        }
                    },
                    "401": {
                        "description": "Error while GetAll",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/genre/update/{id}": {
            "put": {
                "description": "Update page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Genre"
                ],
                "summary": "Update Genre",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Genre ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update",
                        "name": "Update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genprotos.Genre"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Error while updated",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/genre/{id}/books": {
            "get": {
                "description": "GetAll page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Genre"
                ],
                "summary": "GetAll Genre",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Genre ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetAll Successful",
                        "schema": {
                            "$ref": "#/definitions/genprotos.AllBooks"
                        }
                    },
                    "401": {
                        "description": "Error while GetAll",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "genprotos.AllAuthors": {
            "type": "object",
            "properties": {
                "authors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.AuthorRes"
                    }
                }
            }
        },
        "genprotos.AllBooks": {
            "type": "object",
            "properties": {
                "books": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.BookRes"
                    }
                }
            }
        },
        "genprotos.AllBorrowers": {
            "type": "object",
            "properties": {
                "borrowers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.BorrowerRes"
                    }
                }
            }
        },
        "genprotos.AllGenres": {
            "type": "object",
            "properties": {
                "Genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genprotos.Genre"
                    }
                }
            }
        },
        "genprotos.AuthorReq": {
            "type": "object",
            "properties": {
                "biography": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "genprotos.AuthorRes": {
            "type": "object",
            "properties": {
                "biography": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "genprotos.BookReq": {
            "type": "object",
            "properties": {
                "author_id": {
                    "type": "string"
                },
                "genre_id": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "genprotos.BookRes": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/genprotos.AuthorRes"
                },
                "genre": {
                    "$ref": "#/definitions/genprotos.Genre"
                },
                "id": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "genprotos.BorrowerReq": {
            "type": "object",
            "properties": {
                "book_id": {
                    "type": "string"
                },
                "borrow_date": {
                    "type": "string"
                },
                "return_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genprotos.BorrowerRes": {
            "type": "object",
            "properties": {
                "book": {
                    "$ref": "#/definitions/genprotos.BookRes"
                },
                "borrow_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "return_date": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/genprotos.UserRes"
                }
            }
        },
        "genprotos.Genre": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "genprotos.UserRes": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authourization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "",
	Description:      "Library service",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
